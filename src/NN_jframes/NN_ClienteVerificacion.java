/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package NN_jframes;

import Managers.DatabaseManager;
import java.awt.Dimension;
import java.awt.KeyEventDispatcher;
import java.awt.KeyboardFocusManager;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;

/**
 *
 * @author Diego Armando
 */
public class NN_ClienteVerificacion extends javax.swing.JFrame {
    DatabaseManager db;
    NN_JframeAdmin manager;
    NN_clienteMain clienteMenu;
    /**
     * Creates new form NN_ClienteVerificacion
     */
    public NN_ClienteVerificacion() {
        initComponents();
        setMinimumSize(new Dimension(450,165).getSize());
        db = NN_MainClass.db;
        NN_JframeAdmin manager = NN_MainClass.getManager();
        clienteMenu = manager.managerClienteMain;
        //KeyboardFocusManager.getCurrentKeyboardFocusManager().addKeyEventDispatcher(keyEventDispatcher);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        B_confirm = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        PF_pass = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Verificacion");
        setLocationByPlatform(true);
        setMinimumSize(new java.awt.Dimension(490, 155));
        setPreferredSize(new java.awt.Dimension(490, 155));
        setResizable(false);
        setSize(new java.awt.Dimension(490, 155));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        B_confirm.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        B_confirm.setText("Confirmar");
        B_confirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_confirmActionPerformed(evt);
            }
        });
        getContentPane().add(B_confirm, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 100, -1, -1));

        jLabel1.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Porfavor ingrese su password");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 470, -1));

        PF_pass.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        PF_pass.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        PF_pass.setText("PASSWORD");
        PF_pass.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                PF_passFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                PF_passFocusLost(evt);
            }
        });
        getContentPane().add(PF_pass, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 60, 274, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void B_confirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_confirmActionPerformed
        // TODO add your handling code here:
        confirm();
    }//GEN-LAST:event_B_confirmActionPerformed

    public void confirm(){
        String userPass = PF_pass.getText();
        if(db.checkAdmin(userPass)){
            boolean success = db.removeClient(clienteMenu.selectedId);
            if(success){
               clienteMenu.refreshTable();
               clienteMenu.display("Se elimino correctamente al cliente");
               clienteMenu.enable(true);
               this.dispose();
            }
            else{
                JOptionPane.showMessageDialog(null, "Error al tratar de eliminar", "Error en la Base de datos", JOptionPane.INFORMATION_MESSAGE);
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "No existe administrador con ese password", "Password invalido", JOptionPane.INFORMATION_MESSAGE);
        }
        
    }
    
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        clienteMenu.refreshTable();
        clienteMenu.enable(true);
        this.dispose();
    }//GEN-LAST:event_formWindowClosing

    private void PF_passFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PF_passFocusGained
        // TODO add your handling code here:
        if(PF_pass.getText().equals("PASSWORD")){
            PF_pass.setText("");
        }
    }//GEN-LAST:event_PF_passFocusGained

    private void PF_passFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_PF_passFocusLost
        // TODO add your handling code here:
        if(PF_pass.getText().equals("")){
            PF_pass.setText("PASSWORD");
        }
    }//GEN-LAST:event_PF_passFocusLost

    /*KeyEventDispatcher keyEventDispatcher = new KeyEventDispatcher() {
        @Override
        public boolean dispatchKeyEvent(final KeyEvent e) {
            if (e.getID() == KeyEvent.KEY_TYPED) {
            String eString = e.toString();
            if(eString.contains("Intro")){
                confirm();
            }
        }
        // Pass the KeyEvent to the next KeyEventDispatcher in the chain
            return false;
        }
    };*/
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NN_ClienteVerificacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NN_ClienteVerificacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NN_ClienteVerificacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NN_ClienteVerificacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NN_ClienteVerificacion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton B_confirm;
    private javax.swing.JPasswordField PF_pass;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
