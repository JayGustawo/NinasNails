/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package NN_jframes;

import BusinessObjects.Appointment;
import BusinessObjects.Client;
import BusinessObjects.Employee;
import BusinessObjects.Payment;
import BusinessObjects.Product;
import Managers.DatabaseManager;
import java.awt.Dimension;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Diego Armando
 */
public class NN_InventarioMain extends javax.swing.JFrame {
    
    DatabaseManager db;
    public NN_JframeAdmin manager;
    int selectedId;
    /**
     * Creates new form NN_citaMain
     */
    public NN_InventarioMain() {
        initComponents();
        hidebttn();
        setMinimumSize(new Dimension(1000,715).getSize());
        manager = NN_MainClass.getManager();
        db = NN_MainClass.db;
        DefaultTableModel amodel = (DefaultTableModel)table_producto.getModel();
        amodel.setRowCount(0);
        try{
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe", "proyectouser", "proyecto");
            String colhead[]={"ID","Nombre","Proveedor","Costo"};
            amodel.setColumnIdentifiers(colhead);
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery("Select ID,NAME,SUPPLIER,COST from PRODUCT ORDER BY ID ASC");
            ResultSetMetaData rsmd = rs.getMetaData();
            int cols=rsmd.getColumnCount();
            while(rs.next()){
                Object[] obj=new Object[cols];
                for(int i=0; i<cols; i++){
                    obj[i]=rs.getObject(i+1);
                }
                amodel.addRow(obj);
            }
            conn.close();
        }catch(Exception e){
        }
        table_producto.setDefaultEditor(Object.class, null);
        
        DefaultTableModel amodel2 = (DefaultTableModel)table_productoEdit.getModel();
        amodel2.setRowCount(0);
        try{
            String colhead[]={"Cantidad"};
            amodel2.setColumnIdentifiers(colhead);
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection conn2 = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe", "proyectouser", "proyecto");
            Statement stmt = conn2.createStatement();
            ResultSet rs = stmt.executeQuery("Select QUANTITY from PRODUCT ORDER BY ID ASC");
            ResultSetMetaData rsmd = rs.getMetaData();
            int cols=rsmd.getColumnCount();
            while(rs.next()){
                Object[] obj=new Object[cols];
                for(int i=0; i<cols; i++){
                    obj[i]=rs.getObject(i+1);
                }
                amodel2.addRow(obj);
            }
            conn2.close();
        }catch(Exception e){
        }finally{
        }
        table_producto.setDefaultEditor(Object.class, null);
        
        DefaultTableModel amodel3 = (DefaultTableModel)table_productoUnit.getModel();
        amodel3.setRowCount(0);
        try{
            String colhead[]={"Qty"};
            amodel3.setColumnIdentifiers(colhead);
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection conn2 = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe", "proyectouser", "proyecto");
            Statement stmt = conn2.createStatement();
            ResultSet rs = stmt.executeQuery("Select UNIT from PRODUCT ORDER BY ID ASC");
            ResultSetMetaData rsmd = rs.getMetaData();
            int cols=rsmd.getColumnCount();
            while(rs.next()){
                Object[] obj=new Object[cols];
                for(int i=0; i<cols; i++){
                    obj[i]=rs.getObject(i+1);
                }
                amodel3.addRow(obj);
            }
            conn2.close();
        }catch(Exception e){
        }
        table_producto.setDefaultEditor(Object.class, null);        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SP_table = new javax.swing.JScrollPane();
        table_producto = new javax.swing.JTable();
        text_Message = new javax.swing.JLabel();
        B_salir = new javax.swing.JButton();
        B_agregar = new javax.swing.JButton();
        B_eliminar = new javax.swing.JButton();
        B_editar = new javax.swing.JButton();
        TB_textSelect = new javax.swing.JTextField();
        T_message = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_productoUnit = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        table_productoEdit = new javax.swing.JTable();
        Tab_text = new javax.swing.JLabel();
        TAB = new javax.swing.JLabel();
        Line = new javax.swing.JLabel();
        buttonS4 = new javax.swing.JLabel();
        buttonS3 = new javax.swing.JLabel();
        buttonS2 = new javax.swing.JLabel();
        buttonS1 = new javax.swing.JLabel();
        buttonS = new javax.swing.JLabel();
        BG = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Inventario");
        setLocation(new java.awt.Point(100, 100));
        setMinimumSize(new java.awt.Dimension(985, 700));
        setResizable(false);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                formMouseMoved(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                formKeyTyped(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        SP_table.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(114, 171, 211), 3));

        table_producto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        table_producto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_productoMouseClicked(evt);
            }
        });
        SP_table.setViewportView(table_producto);

        getContentPane().add(SP_table, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 58, 811, 500));

        text_Message.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        text_Message.setForeground(new java.awt.Color(0, 102, 102));
        text_Message.setText("Id de producto seleccionado");
        getContentPane().add(text_Message, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 580, 210, 30));

        B_salir.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        B_salir.setForeground(new java.awt.Color(255, 255, 255));
        B_salir.setText("Salir");
        B_salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_salirActionPerformed(evt);
            }
        });
        getContentPane().add(B_salir, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 647, 70, 30));

        B_agregar.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        B_agregar.setForeground(new java.awt.Color(255, 255, 255));
        B_agregar.setText("Agregar");
        B_agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_agregarActionPerformed(evt);
            }
        });
        getContentPane().add(B_agregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 647, -1, 30));

        B_eliminar.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        B_eliminar.setForeground(new java.awt.Color(255, 255, 255));
        B_eliminar.setText("Eliminar");
        B_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_eliminarActionPerformed(evt);
            }
        });
        getContentPane().add(B_eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 647, -1, 30));

        B_editar.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        B_editar.setForeground(new java.awt.Color(255, 255, 255));
        B_editar.setText("Editar");
        B_editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_editarActionPerformed(evt);
            }
        });
        getContentPane().add(B_editar, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 647, -1, 30));

        TB_textSelect.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TB_textSelect.setText("-");
        getContentPane().add(TB_textSelect, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 590, 40, -1));

        T_message.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(T_message, new org.netbeans.lib.awtextra.AbsoluteConstraints(336, 661, 550, 28));

        jButton1.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Actualizar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 565, 100, 30));

        jScrollPane1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(114, 171, 211), 3, true));

        table_productoUnit.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Title 1"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table_productoUnit);
        if (table_productoUnit.getColumnModel().getColumnCount() > 0) {
            table_productoUnit.getColumnModel().getColumn(0).setResizable(false);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(934, 58, 40, 500));

        jScrollPane2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(114, 171, 211), 3, true));

        table_productoEdit.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Title 1"
            }
        ));
        jScrollPane2.setViewportView(table_productoEdit);
        if (table_productoEdit.getColumnModel().getColumnCount() > 0) {
            table_productoEdit.getColumnModel().getColumn(0).setResizable(false);
        }

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(837, 58, 91, 500));

        Tab_text.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        Tab_text.setForeground(new java.awt.Color(255, 255, 255));
        Tab_text.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Tab_text.setText("Productos");
        getContentPane().add(Tab_text, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, 200, 40));

        TAB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resource/NinaNails/productoMain/productoMain_tab.png"))); // NOI18N
        getContentPane().add(TAB, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, 50));

        Line.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resource/NinaNails/productoMain/productoMain_line.png"))); // NOI18N
        getContentPane().add(Line, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 580, 240, 50));

        buttonS4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resource/NinaNails/productoMain/productoMain_button.png"))); // NOI18N
        getContentPane().add(buttonS4, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 560, -1, 40));

        buttonS3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resource/NinaNails/productoMain/productoMain_button.png"))); // NOI18N
        getContentPane().add(buttonS3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 640, -1, 40));

        buttonS2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resource/NinaNails/productoMain/productoMain_button.png"))); // NOI18N
        getContentPane().add(buttonS2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 640, -1, 40));

        buttonS1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resource/NinaNails/productoMain/productoMain_button.png"))); // NOI18N
        getContentPane().add(buttonS1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 640, -1, 40));

        buttonS.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resource/NinaNails/productoMain/productoMain_button.png"))); // NOI18N
        getContentPane().add(buttonS, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 640, -1, 40));

        BG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resource/NinaNails/productoMain/productoMain_background.png"))); // NOI18N
        getContentPane().add(BG, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void hidebttn(){
                
        B_salir.setOpaque(false);
        B_salir.setContentAreaFilled(false); //to make the content area transparent
        B_salir.setBorderPainted(false); //to make the borders transparent
        
        B_editar.setOpaque(false);
        B_editar.setContentAreaFilled(false); //to make the content area transparent
        B_editar.setBorderPainted(false); //to make the borders transparent
        
        B_agregar.setOpaque(false);
        B_agregar.setContentAreaFilled(false); //to make the content area transparent
        B_agregar.setBorderPainted(false); //to make the borders transparent
        
        B_eliminar.setOpaque(false);
        B_eliminar.setContentAreaFilled(false); //to make the content area transparent
        B_eliminar.setBorderPainted(false); //to make the borders transparent  
        
        jButton1.setOpaque(false);
        jButton1.setContentAreaFilled(false); //to make the content area transparent
        jButton1.setBorderPainted(false); //to make the borders transparent      
    }
    
    private void table_productoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_productoMouseClicked
        // TODO add your handling code here:
        table_producto.addMouseListener(new java.awt.event.MouseAdapter() {
    @Override
    public void mouseClicked(java.awt.event.MouseEvent evt) {
        int row = table_producto.rowAtPoint(evt.getPoint());
        int col = table_producto.columnAtPoint(evt.getPoint());
        if (row >= 0 && col >= 0) {
            DefaultTableModel amodel = (DefaultTableModel)table_producto.getModel();
            Object ido = amodel.getValueAt(row, 0);
            selectedId = Integer.parseInt(ido.toString());
            TB_textSelect.setText(ido.toString());
        }
    }
});
        
        
    }//GEN-LAST:event_table_productoMouseClicked

    private void B_salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_salirActionPerformed
        // TODO add your handling code here:
        manager.openMainMenu();
        this.dispose();
    }//GEN-LAST:event_B_salirActionPerformed

    private void B_agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_agregarActionPerformed
        // TODO add your handling code here:
        manager.openAddProduct();
        this.enable(false);
    }//GEN-LAST:event_B_agregarActionPerformed

    private void B_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_eliminarActionPerformed
        // TODO add your handling code here:
        boolean ok=true;
        try{
            selectedId = Integer.parseInt(TB_textSelect.getText());
        }catch(Exception e){
            ok = false;
            selectedId = 0;
            JOptionPane.showMessageDialog(null, "Id de producto invalido", "ID invalido", JOptionPane.INFORMATION_MESSAGE);
        }
       if(ok){
            Product query = db.getProductById(selectedId);
            try{
                if(query.getId() == selectedId){
                    //Abrir Verificacion para eliminar pago
                    manager.openProductoVer();
                    this.enable(false);
                }
                else{
                    JOptionPane.showMessageDialog(null, "Id no existe", "ID invalido", JOptionPane.INFORMATION_MESSAGE);
                }
            }   catch(Exception e){
                JOptionPane.showMessageDialog(null, "Id no existe", "ID invalido", JOptionPane.INFORMATION_MESSAGE);
            }
            
       }
    }//GEN-LAST:event_B_eliminarActionPerformed

    private void B_editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_editarActionPerformed
        boolean ok=true;
        try{
            selectedId = Integer.parseInt(TB_textSelect.getText());
        }catch(Exception e){
            ok = false;
            selectedId = 0;
            JOptionPane.showMessageDialog(null, "Id de producto invalido", "ID invalido", JOptionPane.INFORMATION_MESSAGE);
        }
       if(ok){
            Product query = db.getProductById(selectedId);
            try{
                if(query.getId() == selectedId){
                   manager.openProductoEdit();
                    this.enable(false);
                }
                else{
                    JOptionPane.showMessageDialog(null, "Id no existe", "ID invalido", JOptionPane.INFORMATION_MESSAGE);
                }
            }   catch(Exception e){
                JOptionPane.showMessageDialog(null, "Id no existe", "ID invalido", JOptionPane.INFORMATION_MESSAGE);
            }
            
       }
    }//GEN-LAST:event_B_editarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        updateQty();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseMoved
        // TODO add your handling code here:
        T_message.setText("-");
    }//GEN-LAST:event_formMouseMoved

    private void formKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyTyped
        // TODO add your handling code here:
        T_message.setText("-");
    }//GEN-LAST:event_formKeyTyped

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        manager.openMainMenu();
        this.dispose();
    }//GEN-LAST:event_formWindowClosing

    public void refreshTable(){
        DefaultTableModel amodel = (DefaultTableModel)table_producto.getModel();
        amodel.setRowCount(0);
        try{
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection conn = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe", "proyectouser", "proyecto");
            String colhead[]={"ID","Nombre","Proveedor","Costo"};
            amodel.setColumnIdentifiers(colhead);
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery("Select ID,NAME,SUPPLIER,COST from PRODUCT ORDER BY ID ASC");
            ResultSetMetaData rsmd = rs.getMetaData();
            int cols=rsmd.getColumnCount();
            while(rs.next()){
                Object[] obj=new Object[cols];
                for(int i=0; i<cols; i++){
                    obj[i]=rs.getObject(i+1);
                }
                amodel.addRow(obj);
            }
            conn.close();
        }catch(Exception e){
        }
        table_producto.setDefaultEditor(Object.class, null);
        
        DefaultTableModel amodel2 = (DefaultTableModel)table_productoEdit.getModel();
        amodel2.setRowCount(0);
        try{
            String colhead[]={"Cantidad"};
            amodel2.setColumnIdentifiers(colhead);
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection conn2 = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe", "proyectouser", "proyecto");
            Statement stmt = conn2.createStatement();
            ResultSet rs = stmt.executeQuery("Select QUANTITY from PRODUCT ORDER BY ID ASC");
            ResultSetMetaData rsmd = rs.getMetaData();
            int cols=rsmd.getColumnCount();
            while(rs.next()){
                Object[] obj=new Object[cols];
                for(int i=0; i<cols; i++){
                    obj[i]=rs.getObject(i+1);
                }
                amodel2.addRow(obj);
            }
            conn2.close();
        }catch(Exception e){
        }
        table_producto.setDefaultEditor(Object.class, null);
        
        DefaultTableModel amodel3 = (DefaultTableModel)table_productoUnit.getModel();
        amodel3.setRowCount(0);
        try{
            String colhead[]={"Qty"};
            amodel3.setColumnIdentifiers(colhead);
            Class.forName("oracle.jdbc.driver.OracleDriver");
            Connection conn2 = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe", "proyectouser", "proyecto");
            Statement stmt = conn2.createStatement();
            ResultSet rs = stmt.executeQuery("Select UNIT from PRODUCT ORDER BY ID ASC");
            ResultSetMetaData rsmd = rs.getMetaData();
            int cols=rsmd.getColumnCount();
            while(rs.next()){
                Object[] obj=new Object[cols];
                for(int i=0; i<cols; i++){
                    obj[i]=rs.getObject(i+1);
                }
                amodel3.addRow(obj);
            }
            conn2.close();
        }catch(Exception e){
        }
        table_producto.setDefaultEditor(Object.class, null);
    }
    
    public String idToEmployeeName(int id){
        String name = null;
        Employee newEmployee = db.getEmployeeById(id);
        if(newEmployee.getId()<=0){
            name = "Inexistente";
        }
        else{
            String fName = newEmployee.getFirstName();
            String lName = newEmployee.getLastName();
            name = fName + " " + lName;
        }
        
        return name;
    }
    
    public void updateQty(){
        DefaultTableModel modelData = (DefaultTableModel)table_producto.getModel();
        DefaultTableModel modelQty = (DefaultTableModel)table_productoEdit.getModel();
        int total = modelData.getRowCount()-1;
            for(int c=0;c<=total;c++){
                Product updateP = new Product();
                updateP.setId(Integer.parseInt(modelData.getValueAt(c, 0).toString()));
                updateP.setQuantity(Float.parseFloat(modelQty.getValueAt(c, 0).toString()));
                db.updateProductQty(updateP);    
            }
        T_message.setText("Se han actualizado correctamente las cantidades.");
        
        refreshTable();
    }
    
    public String idToClientName(int id){
        String name = null;
        Client newClient = db.getClientebyId(id);
        if(newClient.getId()<=0){
            name = "Inexistente";
        }
        else{
            String fName = newClient.getFirstName();
            String lName = newClient.getLastName();
            name = fName + " " + lName;
        }
        
        return name;
    }
    
    public void display(String message){
        T_message.setText(message);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NN_InventarioMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NN_InventarioMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NN_InventarioMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NN_InventarioMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NN_InventarioMain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BG;
    private javax.swing.JButton B_agregar;
    private javax.swing.JButton B_editar;
    private javax.swing.JButton B_eliminar;
    private javax.swing.JButton B_salir;
    private javax.swing.JLabel Line;
    private javax.swing.JScrollPane SP_table;
    private javax.swing.JLabel TAB;
    private javax.swing.JTextField TB_textSelect;
    private javax.swing.JLabel T_message;
    private javax.swing.JLabel Tab_text;
    private javax.swing.JLabel buttonS;
    private javax.swing.JLabel buttonS1;
    private javax.swing.JLabel buttonS2;
    private javax.swing.JLabel buttonS3;
    private javax.swing.JLabel buttonS4;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable table_producto;
    private javax.swing.JTable table_productoEdit;
    private javax.swing.JTable table_productoUnit;
    private javax.swing.JLabel text_Message;
    // End of variables declaration//GEN-END:variables
}
