/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package NN_jframes;

import BusinessObjects.Client;
import Managers.DatabaseManager;
import java.awt.Dimension;
import java.awt.KeyEventDispatcher;
import java.awt.KeyboardFocusManager;
import java.awt.event.KeyEvent;
import java.util.StringTokenizer;
import javax.swing.JOptionPane;

/**
 *
 * @author Diego Armando
 */
public class NN_editarCliente extends javax.swing.JFrame {

    DatabaseManager db;
    boolean busy = false;
    NN_JframeAdmin manager;
    NN_clienteMain clienteMenu;
    /**
     * Creates new form NN_agregarCliente
     */
    public NN_editarCliente() {
        initComponents();
        setMinimumSize(new Dimension(600,299).getSize());
        hidebttn();
        //KeyboardFocusManager.getCurrentKeyboardFocusManager().addKeyEventDispatcher(keyEventDispatcher);
        manager = NN_MainClass.getManager();
        db = NN_MainClass.db;
        clienteMenu = manager.managerClienteMain;
        Client editCliente = db.getClientebyId(clienteMenu.selectedId);
        TB_firstName.setText(editCliente.getFirstName());
        TB_lastName.setText(editCliente.getLastName());
        TB_phone.setText(Long.toString(editCliente.getPhone()));
        T_id.setText(Integer.toString(editCliente.getId()));
        
        
    }

     public void hidebttn(){
       
        B_agregar.setOpaque(false);
        B_agregar.setContentAreaFilled(false); //to make the content area transparent
        B_agregar.setBorderPainted(false); //to make the borders transparent     
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        B_agregar = new javax.swing.JButton();
        T_Nombre = new javax.swing.JLabel();
        T_Apellido = new javax.swing.JLabel();
        T_Numero = new javax.swing.JLabel();
        TB_firstName = new javax.swing.JTextField();
        TB_lastName = new javax.swing.JTextField();
        TB_phone = new javax.swing.JTextField();
        T_id = new javax.swing.JLabel();
        T_Id1 = new javax.swing.JLabel();
        T_Success = new javax.swing.JLabel();
        line8 = new javax.swing.JLabel();
        line4 = new javax.swing.JLabel();
        line2 = new javax.swing.JLabel();
        line1 = new javax.swing.JLabel();
        line3 = new javax.swing.JLabel();
        BG = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Editar cliente");
        setFocusableWindowState(false);
        setLocation(new java.awt.Point(300, 230));
        setMinimumSize(new java.awt.Dimension(600, 280));
        setPreferredSize(new java.awt.Dimension(600, 280));
        setResizable(false);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
                formWindowLostFocus(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        B_agregar.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        B_agregar.setForeground(new java.awt.Color(255, 255, 255));
        B_agregar.setText("Editar");
        B_agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_agregarActionPerformed(evt);
            }
        });
        getContentPane().add(B_agregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 230, 80, 30));

        T_Nombre.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        T_Nombre.setForeground(new java.awt.Color(0, 102, 102));
        T_Nombre.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        T_Nombre.setText("Primer Nombre");
        getContentPane().add(T_Nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, 172, -1));

        T_Apellido.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        T_Apellido.setForeground(new java.awt.Color(0, 102, 102));
        T_Apellido.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        T_Apellido.setText("Apellidos");
        getContentPane().add(T_Apellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, 172, -1));

        T_Numero.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        T_Numero.setForeground(new java.awt.Color(0, 102, 102));
        T_Numero.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        T_Numero.setText("Numero Telefonico");
        getContentPane().add(T_Numero, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, 172, -1));

        TB_firstName.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        TB_firstName.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(TB_firstName, new org.netbeans.lib.awtextra.AbsoluteConstraints(189, 70, 390, -1));

        TB_lastName.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        TB_lastName.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(TB_lastName, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 108, 390, -1));

        TB_phone.setFont(new java.awt.Font("Calibri", 0, 14)); // NOI18N
        TB_phone.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(TB_phone, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 146, 390, -1));

        T_id.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        T_id.setForeground(new java.awt.Color(0, 102, 102));
        T_id.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        T_id.setText("-");
        getContentPane().add(T_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 20, 249, -1));

        T_Id1.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        T_Id1.setForeground(new java.awt.Color(0, 102, 102));
        T_Id1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        T_Id1.setText("ID de cliente");
        getContentPane().add(T_Id1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, 172, -1));

        T_Success.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        T_Success.setForeground(new java.awt.Color(0, 102, 102));
        T_Success.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        T_Success.setText("-");
        getContentPane().add(T_Success, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, 330, -1));

        line8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        line8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resource/NinaNails/Clientmain/clientMain_button.png"))); // NOI18N
        getContentPane().add(line8, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 220, 120, 50));

        line4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resource/NinaNails/Clientmain/clientMain_line.png"))); // NOI18N
        getContentPane().add(line4, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 90, -1, 10));

        line2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resource/NinaNails/Clientmain/clientMain_line.png"))); // NOI18N
        getContentPane().add(line2, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 40, -1, 10));

        line1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resource/NinaNails/Clientmain/clientMain_line.png"))); // NOI18N
        getContentPane().add(line1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 130, -1, 10));

        line3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resource/NinaNails/Clientmain/clientMain_line.png"))); // NOI18N
        getContentPane().add(line3, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 170, -1, 10));

        BG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resource/NinaNails/Clientmain/clientMain_background.png"))); // NOI18N
        getContentPane().add(BG, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        clienteMenu.refreshTable();
        clienteMenu.enable(true);
        this.dispose();
    }//GEN-LAST:event_formWindowClosing

    private void B_agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_agregarActionPerformed
        // TODO add your handling code here
        confirm();
    }//GEN-LAST:event_B_agregarActionPerformed

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        // TODO add your handling code here:
        busy = false;
    }//GEN-LAST:event_formWindowGainedFocus

    private void formWindowLostFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowLostFocus
        // TODO add your handling code here:
        busy = true;
    }//GEN-LAST:event_formWindowLostFocus

    public void confirm(){
        boolean okFName = true;
        boolean okLName = true;
        boolean okPhone = true;
        boolean valFN = false;
        boolean valLN = false;
        String addFirstName = TB_firstName.getText();
        String addLastName = TB_lastName.getText();
        valFN = validateFirstName(TB_firstName.getText());
        valLN = validateLastName(TB_lastName.getText());
        long addPhone = 0;
        try{
             addPhone = Long.parseLong(TB_phone.getText());
        } catch(Exception e){
            okPhone = false;
            JOptionPane.showMessageDialog(null, "El numero de telefono no puede contener letras y debe ser menor a 20 caracteres", "Error en Telefono", JOptionPane.INFORMATION_MESSAGE);
        }
        if(addFirstName.length() > 40 || addFirstName.equals("") || addFirstName == null ){
            okFName = false;
            JOptionPane.showMessageDialog(null, "Los nombres deben ser menor a 40 caracteres", "Error en el primer nombre", JOptionPane.INFORMATION_MESSAGE);
        }
        if(addLastName.length() > 40 || addLastName.equals("") || addLastName == null){
            okLName = false;
            JOptionPane.showMessageDialog(null, "Los nombres deben ser menor a 40 caracteres", "Error en los apellidos", JOptionPane.INFORMATION_MESSAGE);
        }
        if(okLName && okFName && okPhone && valFN && valLN){
            Client addClient = new Client();
            addClient.setId(Integer.parseInt(T_id.getText()));
            addClient.setFirstName(TB_firstName.getText());
            addClient.setLastName(TB_lastName.getText());
            addClient.setPhone(addPhone);
            boolean success = db.editClient(addClient);
            if(success){
                TB_firstName.setText("");
                TB_lastName.setText("");
                TB_phone.setText("");
                int newid = db.getMaxClient() + 1;
                T_id.setText(Integer.toString(newid));
                T_Success.setText("la operacion se realizo correctamente");
                clienteMenu.refreshTable();
            }
            
        }
    }
    
    public boolean validateLastName(String text){
        boolean valid = true;
        boolean isAlp = true;
        boolean only2 = true;
        String names[] = {"",""};
        StringTokenizer tokens = new StringTokenizer(text);
        int maxT = tokens.countTokens();
        if(tokens.countTokens() > 2 || tokens.countTokens() == 0){
            only2 = false;
        }
        else{
            for(int c=0; c <= tokens.countTokens() ; c++){
                names[c] = tokens.nextToken();
                names[c] = names[c].toLowerCase();
                names[c] = Character.toUpperCase(names[c].charAt(0)) + names[c].substring(1);
                for(int z=0 ; z < names[c].length() ;z++){
                    if(isAlp){
                        isAlp = Character.isAlphabetic(names[c].charAt(z));   
                    }
                    if(!isAlp){
                        z = names[c].length();
                    }
                }
            }
        }
        if(!isAlp){
            valid = false;
            JOptionPane.showMessageDialog(null, "Solo se permiten letras en el nombre", "Error en los nombres", JOptionPane.INFORMATION_MESSAGE);
        }
        if(!only2){
            valid = false;
            JOptionPane.showMessageDialog(null, "Maximo dos nombres por campo, minimo 1", "Error en los nombres", JOptionPane.INFORMATION_MESSAGE);
        }
        if(isAlp && only2 && valid){
            if(maxT==1){
                TB_lastName.setText(names[0]);
            }
            else{
                TB_lastName.setText(names[0] + " " + names[1]);
            }
        }
        return valid;
    }
    
    public boolean validateFirstName(String text){
        boolean valid = true;
        boolean isAlp = true;
        boolean only2 = true;
        String names[] = {"",""};
        StringTokenizer tokens = new StringTokenizer(text);
        int maxT = tokens.countTokens();
        if(tokens.countTokens() > 2 || tokens.countTokens() == 0){
            only2 = false;
        }
        else{
            for(int c=0; c <= tokens.countTokens() ; c++){
                names[c] = tokens.nextToken();
                names[c] = names[c].toLowerCase();
                names[c] = Character.toUpperCase(names[c].charAt(0)) + names[c].substring(1);
                for(int z=0 ; z < names[c].length() ;z++){
                    if(isAlp){
                        isAlp = Character.isAlphabetic(names[c].charAt(z));   
                    }
                    if(!isAlp){
                        z = names[c].length();
                    }
                }
            }
        }
        if(!isAlp){
            valid = false;
            JOptionPane.showMessageDialog(null, "Solo se permiten letras en el nombre", "Error en los nombres", JOptionPane.INFORMATION_MESSAGE);
        }
        if(!only2){
            valid = false;
            JOptionPane.showMessageDialog(null, "Maximo dos nombres por campo, minimo 1", "Error en los nombres", JOptionPane.INFORMATION_MESSAGE);
        }
        if(isAlp && only2 && valid){
            if(maxT==1){
                TB_firstName.setText(names[0]);
            }
            else{
                TB_firstName.setText(names[0] + " " + names[1]);
            }
        }
        return valid;
    }
    
    /*KeyEventDispatcher keyEventDispatcher = new KeyEventDispatcher() {
        @Override
        public boolean dispatchKeyEvent(final KeyEvent e) {
            if (e.getID() == KeyEvent.KEY_TYPED) {
            String eString = e.toString();
            if(eString.contains("Intro") && !busy){
                confirm();
            }
        }
        // Pass the KeyEvent to the next KeyEventDispatcher in the chain
            return false;
        }
    };*/
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NN_editarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NN_editarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NN_editarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NN_editarCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NN_editarCliente().setVisible(true);
            }
        });
    }

        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BG;
    private javax.swing.JButton B_agregar;
    private javax.swing.JTextField TB_firstName;
    private javax.swing.JTextField TB_lastName;
    private javax.swing.JTextField TB_phone;
    private javax.swing.JLabel T_Apellido;
    private javax.swing.JLabel T_Id1;
    private javax.swing.JLabel T_Nombre;
    private javax.swing.JLabel T_Numero;
    private javax.swing.JLabel T_Success;
    private javax.swing.JLabel T_id;
    private javax.swing.JLabel line1;
    private javax.swing.JLabel line2;
    private javax.swing.JLabel line3;
    private javax.swing.JLabel line4;
    private javax.swing.JLabel line8;
    // End of variables declaration//GEN-END:variables
}
